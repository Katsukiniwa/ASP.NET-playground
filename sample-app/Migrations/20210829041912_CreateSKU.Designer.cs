// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using sample_app.Data;

namespace sample_app.Migrations
{
    [DbContext(typeof(SampleAppContext))]
    [Migration("20210829041912_CreateSKU")]
    partial class CreateSKU
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.8");

            modelBuilder.Entity("sample_app.Models.Option", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Options");
                });

            modelBuilder.Entity("sample_app.Models.OptionValue", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<string>("OptionId")
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("OptionId");

                    b.ToTable("OptionValues");
                });

            modelBuilder.Entity("sample_app.Models.Product", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("sample_app.Models.StockKeepingUnitProduct", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<int>("PriceWithTax")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<long?>("ProductId1")
                        .HasColumnType("bigint");

                    b.Property<int>("StockAmount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId1");

                    b.ToTable("StockKeepingUnitProducts");
                });

            modelBuilder.Entity("sample_app.Models.StockKeepingUnitProductOptionValue", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("OptionValueId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ProductId")
                        .HasColumnType("longtext");

                    b.Property<long?>("ProductId1")
                        .HasColumnType("bigint");

                    b.Property<long?>("StockKeepingUnitProductId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("OptionValueId");

                    b.HasIndex("ProductId1");

                    b.HasIndex("StockKeepingUnitProductId");

                    b.ToTable("stockKeepingUnitProductOptionValues");
                });

            modelBuilder.Entity("sample_app.Models.TodoItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<bool>("IsComplete")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("TodoItems");
                });

            modelBuilder.Entity("sample_app.Models.OptionValue", b =>
                {
                    b.HasOne("sample_app.Models.Option", "Option")
                        .WithMany("OptionValues")
                        .HasForeignKey("OptionId");

                    b.Navigation("Option");
                });

            modelBuilder.Entity("sample_app.Models.StockKeepingUnitProduct", b =>
                {
                    b.HasOne("sample_app.Models.Product", "Product")
                        .WithMany("StockKeepingUnitProducts")
                        .HasForeignKey("ProductId1");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("sample_app.Models.StockKeepingUnitProductOptionValue", b =>
                {
                    b.HasOne("sample_app.Models.OptionValue", "OptionValue")
                        .WithMany("StockKeepingUnitProductOptionValues")
                        .HasForeignKey("OptionValueId");

                    b.HasOne("sample_app.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId1");

                    b.HasOne("sample_app.Models.StockKeepingUnitProduct", null)
                        .WithMany("StockKeepingUnitProductOptionValues")
                        .HasForeignKey("StockKeepingUnitProductId");

                    b.Navigation("OptionValue");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("sample_app.Models.Option", b =>
                {
                    b.Navigation("OptionValues");
                });

            modelBuilder.Entity("sample_app.Models.OptionValue", b =>
                {
                    b.Navigation("StockKeepingUnitProductOptionValues");
                });

            modelBuilder.Entity("sample_app.Models.Product", b =>
                {
                    b.Navigation("StockKeepingUnitProducts");
                });

            modelBuilder.Entity("sample_app.Models.StockKeepingUnitProduct", b =>
                {
                    b.Navigation("StockKeepingUnitProductOptionValues");
                });
#pragma warning restore 612, 618
        }
    }
}
